=================================================================================
数据库接口 v1.0 2020.04.09 18:00

提供了四个数据库接口函数，并提供了一个调用示例
---------------------------------------------------------------------------------
Get_Table_Column(Host,Username,Password,Database,TableName,Flag=0)
Host:数据库IP
Username：数据库用户名
Password：数据库用户密码
Database：使用的数据库
TableName：想要获取列信息的表名称
Flag：标记，默认为0，取值应为0或1
该函数的作用是获取指定数据表的列信息
调用后会返回指定表的所有列信息，并以列表形式返回
当Flag为0时，只会返回列名信息；当Flag为1时，会返回列名、数据类型、是否自增、主键等信息
---------------------------------------------------------------------------------
Upload_Raw_Data(Host，Username,Password,Database,TableName,Data,AutoFlag=0)
Host：数据库IP
Username：数据库用户名
Password：数据库用户密码
Database：使用的数据库
TableName：想要获取列信息的表名称
Data：需要上传的数据，以字典列表的形式保存；不要添加自增列的字段！
AutoFlag：标记，默认为0，取值应为0或1
该函数的作用是上传由采集程序采集的数据，典型的调用时机应该是在数据从嵌入式设备传出来后
调用后返回的值与AutoFlag有关，返回类型为列表，调用成功数据会上传到数据库
当AutoFlag值为0时，返回一个空列表；当AutoFlag值为1时，返回插入数据后自增列新增的值
---------------------------------------------------------------------------------
Get_Raw_Data(Host,Username,Password,Database,CheckID,TableName,ColumnNeed,CheckTable=None,KeyColunm=None)
Host:数据库IP
Username：数据库用户名
Password：数据库用户密码
Database：使用的数据库
CheckID：该次检测的ID值
TableName：想要获取列信息的表名称
ColumnNeed：想要获取的列名称，可以使用Get_Table_Column获取列名后根据需要进行删除，或者自己构建列名列表
CheckTable：当需要获取的表没有CheckID时，需要与检测表一起进行多表查询
KeyColunm：目标表的主键列表
该函数的作用是从数据库获取所需要的原始数据，典型的调用时机应该是分析程序在进行分析之前
调用后返回与checkID相关的数据，返回类型为字典列表
当CheckTable值为None时，表示不需要进行多表查询；当CheckTable值不为None时，需要提供主键列表KeyColunm
---------------------------------------------------------------------------------
Update_Raw_Data(Host,Username,Password,Database,CheckID,TableName,Data,KeyColunm)
Host:数据库IP
Username：数据库用户名
Password：数据库用户密码
Database：使用的数据库
CheckID：该次检测的ID值
TableName：想要获取列信息的表名称
Data：想要更新的数据，以字典列表的形式保存；
KeyColunm：目标表的主键列表
该函数的作用是将分析后需要更新的数据上传到数据库，典型的调用时机应该是分析程序在进行分析之后
调用后不返回数据（可能会添加错误信息)，调用成功后数据库对应的数据会更新
---------------------------------------------------------------------------------
暂时就这几个接口，如果有问题或者其他需求可以跟我说
可能会添加的接口：
Unique_Data()——删除表中重复的数据项，便于对多次检测的结果进行比较
=================================================================================
